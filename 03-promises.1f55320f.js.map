{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,UAGa,CACXC,UAAWC,SAASC,cAAc,oBAG/BF,UAAUG,iBAAiB,QAASC,GAIxC,SAASA,EAAcC,EAAUC,GACVC,KAAKC,SAHb,IAAIC,SAAQ,CAACC,EAASC,IAAWP,GAajDQ,CAAQ,EAAG,MACRC,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjBQ,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAqBX,QAAiBC,UAE/DW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBQ,EAAAhB,GAASiB,OAAOG,QAAQ,sBAAoBb,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";\n\nconst refs = {\n  submitBtn: document.querySelector('button[submit]')\n}\n\nrefs.submitBtn.addEventListener('click', createPromise);\n\nconst promise = new Promise((resolve, reject) => createPromise);\n  \n function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\n\n\npromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n  \n  // Asynchronous operation\n"],"names":["$eWCmQ","parcelRequire","submitBtn","document","querySelector","addEventListener","$47d4ff9957288465$var$createPromise","position","delay","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$promise","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.1f55320f.js.map"}