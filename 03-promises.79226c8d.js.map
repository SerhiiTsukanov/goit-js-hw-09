{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAWC,SAASC,EAAcC,EAAUC,GACVC,KAAKC,UAThB,CACXC,UAAWC,SAASC,cAAc,oBAG/BF,UAAUG,iBAAiB,QAASR,GAEzB,IAAIS,SAAQ,SAACC,EAASC,G,OAAWX,IAajDY,CAAQ,EAAG,MACRC,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MACjBa,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,UAEvEiB,OAAM,SAAAL,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAClBa,EAAAjB,GAASkB,OAAOI,QAAQ,sBAAqCF,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";\n\nconst refs = {\n  submitBtn: document.querySelector('button[submit]')\n}\n\nrefs.submitBtn.addEventListener('click', createPromise);\n\nconst promise = new Promise((resolve, reject) => createPromise);\n  \n function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\n\n\npromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n  \n  // Asynchronous operation\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","submitBtn","document","querySelector","addEventListener","Promise","resolve","reject","$ce04d3a99e08e73b$var$promise","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.79226c8d.js.map"}